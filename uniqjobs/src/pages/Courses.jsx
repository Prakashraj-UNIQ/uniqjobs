import React from "react";

import BannerVideo from "../components/Courses/BannerVideo";
// import Stepper from '../components/Courses/Stepper'
import Faq from "../components/Courses/Faq";
import DownloadSyllabus from "../components/Courses/DownloadSyllabus";
import BannerLeft from "../components/Courses/BannerLeft";
import img from "../assets/images/javacover.jpg";
import RoadmapItem from "../components/Courses/RoadmapItem";

const Courses = () => {
  const icons = [
    <svg
      viewBox="0 0 2050 2050"
      data-name="Layer 3"
      id="Layer_3"
      xmlns="http://www.w3.org/2000/svg"
      className="fill-white group-hover:fill-red-600"
    >
      <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
      <g
        id="SVGRepo_tracerCarrier"
        strokeLinecap="round"
        strokeLinejoin="round"
      ></g>
      <g id="SVGRepo_iconCarrier">
        <defs>
          <style></style>
        </defs>
        <title></title>
        <path
          className="cls-1"
          d="M882.7,1062.9H465.1a45.1,45.1,0,0,1-45-45V600.3a45,45,0,0,1,45-45H882.7a44.9,44.9,0,0,1,45,45v417.6A45,45,0,0,1,882.7,1062.9Z"
        ></path>
        <path
          className="cls-1"
          d="M1584.9,728.8H1091.2a45,45,0,0,1,0-90h493.7a45,45,0,0,1,0,90Z"
        ></path>
        <path
          className="cls-1"
          d="M1584.9,984.1H1091.2a45,45,0,0,1,0-90h493.7a45,45,0,0,1,0,90Z"
        ></path>
        <path
          className="cls-1"
          d="M1584.9,1239.4H465.1a45,45,0,1,1,0-90H1584.9a45,45,0,0,1,0,90Z"
        ></path>
        <path
          className="cls-1"
          d="M1584.9,1494.7H465.1a45,45,0,0,1,0-90H1584.9a45,45,0,0,1,0,90Z"
        ></path>
        <path
          className="cls-2"
          d="M671.6,926.9a45,45,0,0,1-45-45V759.5a45,45,0,0,1,90,0V881.9A45.1,45.1,0,0,1,671.6,926.9Z"
        ></path>
        <path
          className="cls-2"
          d="M753,792.9H594.8a45,45,0,0,1,0-90H753a45,45,0,0,1,0,90Z"
        ></path>
      </g>
    </svg>,
    <svg
      className="fill-white group-hover:fill-red-600"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      viewBox="0 0 512 512"
      enableBackground="new 0 0 512 512"
      xmlSpace="preserve"
    >
      <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
      <g
        id="SVGRepo_tracerCarrier"
        strokeLinecap="round"
        strokeLinejoin="round"
      ></g>
      <g id="SVGRepo_iconCarrier">
        {" "}
        <g id="5151e0c8492e5103c096af88a51e8d81">
          {" "}
          <path
            display="inline"
            d="M193.918,208.369c-4.729-10.456-6.849-22.652-3.236-33.731c3.612-11.327,11.703-20.413,19.794-28.878 c22.525-22.531,50.285-39.085,72.316-61.986c12.197-12.573,22.278-27.634,25.762-44.937c2.864-12.695,1.496-25.764-1.117-38.337 c11.7,13.319,15.559,32.363,12.197,49.541c-3.608,19.292-14.316,36.344-26.886,51.031c-10.081,11.827-21.659,22.282-33.731,31.993 c-14.065,11.327-27.88,23.524-36.716,39.457c-7.472,12.943-9.215,28.876-4.11,42.942c8.341,24.146,27.756,42.071,38.338,64.848 c-11.703-10.332-23.152-21.036-33.86-32.361C211.471,236.001,200.889,223.307,193.918,208.369z M257.398,189.448 c-2.115,19.792,8.213,38.462,20.539,53.151c5.972,6.596,11.076,14.687,11.323,23.899c0.251,12.318-6.716,23.774-15.684,31.861 c2.119-0.246,3.612-2.115,5.355-3.11c13.443-8.589,26.385-19.418,32.982-34.227c4.357-10.083,3.362-22.034-2.362-31.371 c-6.724-10.953-15.559-20.662-20.786-32.61c-2.867-6.721-3.862-14.562-1.496-21.657c3.114-9.583,9.834-17.426,16.93-24.272 c19.54-18.544,43.189-31.743,65.844-46.179c-28.629,8.214-56.883,19.542-81.03,37.343 C273.702,153.727,259.515,169.658,257.398,189.448z M393.447,283.052c13.568,0.748,26.882,10.704,29.374,24.397 c2.366,11.825-3.358,23.524-10.705,32.485c-12.075,14.438-28.382,24.771-44.807,33.609c-1.622,0.991-2.99,2.237-4.235,3.608 c21.659-5.478,43.314-13.689,60.867-27.756c9.705-8.091,18.294-18.799,20.163-31.619c1.743-11.076-2.86-22.528-11.077-29.871 c-9.96-9.09-24.021-12.448-37.218-10.704c-7.593,0.995-15.931,2.613-21.158,8.961C380.877,284.921,386.971,282.429,393.447,283.052 z M123.22,318.647c16.303,4.357,33.108,5.603,49.787,6.724c14.936,0.995,29.875,1.246,44.937,1.12 c38.833-0.619,77.916-3.236,116.003-11.699c3.608-0.87,7.593-1.493,10.833-3.733c6.347-4.11,13.313-7.347,20.162-10.583 c-30.995,4.979-62.113,9.215-93.478,11.205c-31.74,1.991-63.731,3.236-95.593,1.121c-9.086-0.87-18.423-1.371-26.886-4.858 c-1.994-0.87-4.733-2.609-3.738-5.227c1.869-3.361,5.603-4.977,8.839-6.72c13.694-6.473,28.629-10.081,43.193-14.313 c-25.021-0.376-49.916,5.971-72.814,15.806c-5.105,2.491-10.83,4.481-14.936,8.714c-1.622,1.739-1.622,4.732,0.247,6.222 C113.511,315.787,118.487,317.28,123.22,318.647z M324.864,352.88c-21.784,3.859-43.694,7.472-65.726,8.589 c-24.147,1.618-48.294,0.247-72.191-2.241c-4.604-0.623-9.211-1.368-13.317-3.483c-2.116-1.246-4.231-3.236-4.106-5.854 c0.247-4.106,3.73-6.967,6.222-9.956c-7.715,2.739-15.434,5.599-21.906,10.708c-2.742,2.116-5.478,5.474-4.733,9.208 c1.125,4.356,5.356,6.97,9.09,8.96c9.208,4.733,19.54,6.846,29.625,8.714c25.511,4.11,51.527,4.235,77.167,2.488 c27.141-2.115,54.148-6.594,80.411-14.313C337.932,362.342,330.836,358.479,324.864,352.88z M188.068,395.951 c-6.97,1.99-14.066,4.357-19.79,8.957c-2.868,2.241-5.105,6.104-3.734,9.713c1.743,4.604,6.1,7.347,10.203,9.705 c10.708,5.854,22.78,8.589,34.604,10.708c26.765,4.229,54.27,3.608,80.908-1.12c15.806-2.989,31.615-7.221,46.301-13.815 c-9.584-3.984-18.917-8.467-27.878-13.693c-15.559,2.738-31.246,5.603-47.178,6.598c-21.032,1.618-42.319-0.125-63.355-2.738 c-4.98-1.121-11.202-1.618-14.563-5.976C181.847,400.677,185.828,398.063,188.068,395.951z M358.345,475.982 c17.424-3.604,34.977-7.719,50.908-15.806c4.976-2.867,11.076-5.979,12.698-11.95c0.87-5.725-5.105-8.714-9.337-11.08 c2.613,2.993,4.356,7.347,1.74,10.83c-4.357,5.853-11.821,8.091-18.42,10.332c-20.66,5.85-42.072,8.216-63.355,10.582 c-56.385,5.102-113.146,6.348-169.528,1.618c-18.92-1.994-38.217-4.109-56.264-10.829c-2.86-1.246-7.217-2.492-7.217-6.352 c1.117-3.354,4.357-5.227,7.217-6.845c12.945-6.595,27.384-10.207,41.822-11.077c-4.228-2.491-9.208-2.738-14.062-2.613 c-12.076,0.373-23.9,3.483-35.349,7.347c-9.834,3.604-19.916,7.59-27.76,14.811c-3.111,2.735-5.971,7.962-2.739,11.699 c4.98,5.353,12.699,6.72,19.54,8.338c38.338,6.599,77.171,10.328,116.011,11.699C255.781,488.184,307.684,485.942,358.345,475.982z M409.378,482.706c-23.402,7.468-47.672,11.574-71.822,14.936c-41.696,5.227-83.769,6.845-125.716,5.603 c-25.515-0.995-51.03-2.738-76.176-6.974c5.85,3.984,13.071,5.227,19.794,7.096c28.257,5.976,57.255,7.096,86.01,7.966 c42.19,0.748,84.387-0.87,125.962-7.468c19.669-3.48,39.459-7.715,57.13-16.927c9.215-4.854,18.552-12.326,20.163-23.152 C435.391,473.741,421.951,478.349,409.378,482.706z"
          >
            {" "}
          </path>{" "}
        </g>{" "}
      </g>
    </svg>,
    <svg
      className="fill-white group-hover:fill-red-600"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      viewBox="0 0 512 512"
      enableBackground="new 0 0 512 512"
      xmlSpace="preserve"
    >
      <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
      <g
        id="SVGRepo_tracerCarrier"
        strokeLinecap="round"
        strokeLinejoin="round"
      ></g>
      <g id="SVGRepo_iconCarrier">
        {" "}
        <g id="5151e0c8492e5103c096af88a51e8d81">
          {" "}
          <path
            display="inline"
            d="M193.918,208.369c-4.729-10.456-6.849-22.652-3.236-33.731c3.612-11.327,11.703-20.413,19.794-28.878 c22.525-22.531,50.285-39.085,72.316-61.986c12.197-12.573,22.278-27.634,25.762-44.937c2.864-12.695,1.496-25.764-1.117-38.337 c11.7,13.319,15.559,32.363,12.197,49.541c-3.608,19.292-14.316,36.344-26.886,51.031c-10.081,11.827-21.659,22.282-33.731,31.993 c-14.065,11.327-27.88,23.524-36.716,39.457c-7.472,12.943-9.215,28.876-4.11,42.942c8.341,24.146,27.756,42.071,38.338,64.848 c-11.703-10.332-23.152-21.036-33.86-32.361C211.471,236.001,200.889,223.307,193.918,208.369z M257.398,189.448 c-2.115,19.792,8.213,38.462,20.539,53.151c5.972,6.596,11.076,14.687,11.323,23.899c0.251,12.318-6.716,23.774-15.684,31.861 c2.119-0.246,3.612-2.115,5.355-3.11c13.443-8.589,26.385-19.418,32.982-34.227c4.357-10.083,3.362-22.034-2.362-31.371 c-6.724-10.953-15.559-20.662-20.786-32.61c-2.867-6.721-3.862-14.562-1.496-21.657c3.114-9.583,9.834-17.426,16.93-24.272 c19.54-18.544,43.189-31.743,65.844-46.179c-28.629,8.214-56.883,19.542-81.03,37.343 C273.702,153.727,259.515,169.658,257.398,189.448z M393.447,283.052c13.568,0.748,26.882,10.704,29.374,24.397 c2.366,11.825-3.358,23.524-10.705,32.485c-12.075,14.438-28.382,24.771-44.807,33.609c-1.622,0.991-2.99,2.237-4.235,3.608 c21.659-5.478,43.314-13.689,60.867-27.756c9.705-8.091,18.294-18.799,20.163-31.619c1.743-11.076-2.86-22.528-11.077-29.871 c-9.96-9.09-24.021-12.448-37.218-10.704c-7.593,0.995-15.931,2.613-21.158,8.961C380.877,284.921,386.971,282.429,393.447,283.052 z M123.22,318.647c16.303,4.357,33.108,5.603,49.787,6.724c14.936,0.995,29.875,1.246,44.937,1.12 c38.833-0.619,77.916-3.236,116.003-11.699c3.608-0.87,7.593-1.493,10.833-3.733c6.347-4.11,13.313-7.347,20.162-10.583 c-30.995,4.979-62.113,9.215-93.478,11.205c-31.74,1.991-63.731,3.236-95.593,1.121c-9.086-0.87-18.423-1.371-26.886-4.858 c-1.994-0.87-4.733-2.609-3.738-5.227c1.869-3.361,5.603-4.977,8.839-6.72c13.694-6.473,28.629-10.081,43.193-14.313 c-25.021-0.376-49.916,5.971-72.814,15.806c-5.105,2.491-10.83,4.481-14.936,8.714c-1.622,1.739-1.622,4.732,0.247,6.222 C113.511,315.787,118.487,317.28,123.22,318.647z M324.864,352.88c-21.784,3.859-43.694,7.472-65.726,8.589 c-24.147,1.618-48.294,0.247-72.191-2.241c-4.604-0.623-9.211-1.368-13.317-3.483c-2.116-1.246-4.231-3.236-4.106-5.854 c0.247-4.106,3.73-6.967,6.222-9.956c-7.715,2.739-15.434,5.599-21.906,10.708c-2.742,2.116-5.478,5.474-4.733,9.208 c1.125,4.356,5.356,6.97,9.09,8.96c9.208,4.733,19.54,6.846,29.625,8.714c25.511,4.11,51.527,4.235,77.167,2.488 c27.141-2.115,54.148-6.594,80.411-14.313C337.932,362.342,330.836,358.479,324.864,352.88z M188.068,395.951 c-6.97,1.99-14.066,4.357-19.79,8.957c-2.868,2.241-5.105,6.104-3.734,9.713c1.743,4.604,6.1,7.347,10.203,9.705 c10.708,5.854,22.78,8.589,34.604,10.708c26.765,4.229,54.27,3.608,80.908-1.12c15.806-2.989,31.615-7.221,46.301-13.815 c-9.584-3.984-18.917-8.467-27.878-13.693c-15.559,2.738-31.246,5.603-47.178,6.598c-21.032,1.618-42.319-0.125-63.355-2.738 c-4.98-1.121-11.202-1.618-14.563-5.976C181.847,400.677,185.828,398.063,188.068,395.951z M358.345,475.982 c17.424-3.604,34.977-7.719,50.908-15.806c4.976-2.867,11.076-5.979,12.698-11.95c0.87-5.725-5.105-8.714-9.337-11.08 c2.613,2.993,4.356,7.347,1.74,10.83c-4.357,5.853-11.821,8.091-18.42,10.332c-20.66,5.85-42.072,8.216-63.355,10.582 c-56.385,5.102-113.146,6.348-169.528,1.618c-18.92-1.994-38.217-4.109-56.264-10.829c-2.86-1.246-7.217-2.492-7.217-6.352 c1.117-3.354,4.357-5.227,7.217-6.845c12.945-6.595,27.384-10.207,41.822-11.077c-4.228-2.491-9.208-2.738-14.062-2.613 c-12.076,0.373-23.9,3.483-35.349,7.347c-9.834,3.604-19.916,7.59-27.76,14.811c-3.111,2.735-5.971,7.962-2.739,11.699 c4.98,5.353,12.699,6.72,19.54,8.338c38.338,6.599,77.171,10.328,116.011,11.699C255.781,488.184,307.684,485.942,358.345,475.982z M409.378,482.706c-23.402,7.468-47.672,11.574-71.822,14.936c-41.696,5.227-83.769,6.845-125.716,5.603 c-25.515-0.995-51.03-2.738-76.176-6.974c5.85,3.984,13.071,5.227,19.794,7.096c28.257,5.976,57.255,7.096,86.01,7.966 c42.19,0.748,84.387-0.87,125.962-7.468c19.669-3.48,39.459-7.715,57.13-16.927c9.215-4.854,18.552-12.326,20.163-23.152 C435.391,473.741,421.951,478.349,409.378,482.706z"
          >
            {" "}
          </path>{" "}
        </g>{" "}
      </g>
    </svg>,
    <svg
      className="fill-white group-hover:fill-red-600"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      viewBox="0 0 512 512"
      enableBackground="new 0 0 512 512"
      xmlSpace="preserve"
    >
      <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
      <g
        id="SVGRepo_tracerCarrier"
        strokeLinecap="round"
        strokeLinejoin="round"
      ></g>
      <g id="SVGRepo_iconCarrier">
        {" "}
        <g id="3e91140ac1bfb9903b91c1b0ca08f5cb">
          {" "}
          <path
            display="inline"
            d="M252.517,286.715h47.268v11.22h-48.077c-0.487,0-1.133,0.107-1.62,0.107 c-5.988,0.541-7.769,1.514-8.577,4.966c-0.164,0.54-0.164,0.973-0.164,1.405v7.66c0,0.541,0,0.974,0.164,1.514 c0.809,4.533,4.046,6.579,10.843,6.579h20.396c5.019,0,10.196,0.865,14.409,2.486c7.93,3.02,11.98,7.552,11.98,12.409v12.301 c0,5.938-3.563,10.472-10.846,13.814c-4.375,2.051-9.876,3.235-15.544,3.235h-48.399v-11.22h46.461c0.648,0,1.131-0.107,1.78-0.107 c3.235-0.217,5.664-1.081,7.119-2.379c1.622-1.289,2.429-2.803,2.429-3.992v-9.818c0-1.077-0.324-2.05-1.293-3.023 c-1.618-1.941-3.889-2.911-9.229-3.343c-0.486-0.108-1.131-0.108-1.779-0.108h-17.485c-1.618,0-3.235-0.108-4.857-0.217 c-14.405-1.509-22.984-7.984-22.984-15.54v-9.818c0-8.633,4.371-13.599,14.407-16.729 C242.156,287.147,245.718,286.715,252.517,286.715z M383.567,361.007l16.584,14.967h-19.55l-13.415-12.11l-13.507,0.857h-18.007 c-3.081,0-6.325-0.433-9.893-1.406c-10.704-2.919-15.898-8.541-15.898-17.844v-40.01c0-10.167,7.141-16.334,21.25-18.28 c1.46-0.217,3.082-0.324,4.541-0.324h31.959c1.621,0,3.081,0.107,4.703,0.324c14.109,1.946,21.246,8.113,21.246,18.28v40.01 C393.581,353.717,390.554,358.133,383.567,361.007z M377.849,306.435c0-0.433,0-0.974-0.162-1.519 c-0.973-4.324-5.352-6.812-11.839-6.812h-25.467c-7.465,0-12.326,3.244-12.326,8.33v38.063c0,0.541,0.162,1.081,0.32,1.73 c0.973,4.653,5.356,7.248,12.006,7.248h15.291l-14.048-12.684h19.55l12.255,11.062c2.254-1.206,3.742-3.044,4.258-5.41 c0.162-0.536,0.162-1.081,0.162-1.622V306.435z M109.281,286.822c-12.788-3.992-21.369-0.54-25.252,8.093l-25.577,57.196 l-24.766-57.196c-3.724-8.633-12.465-12.085-25.252-8.093c-5.342,1.618-7.933,4.749-7.933,11.22v66.37h16.833v-66.478 l26.064,57.953c3.075,7.016,7.284,9.498,15.538,9.498c8.257,0,12.303-2.482,15.38-9.498l26.062-57.953v66.478h16.836v-66.37 C117.213,291.571,114.623,288.44,109.281,286.822z M194.508,310.127v43.606c-0.295,0-31.902,0.075-36.607,0 c-9.222-0.142-10.018-4.815-9.86-6.804v-36.628h-16.83c0.368,0.366-0.004,37.011,0.008,37.784 c0.131,8.358,10.733,15.62,27.38,15.777h35.782v4.412c0.002,1.813,1.281,7.199-9.554,8.347c-0.133,0.008-53.158,0-53.25,0v11.328 h53.157c8.431-0.25,26.723-3.436,26.629-18.103c-0.002-0.254,0.094-59.721,0.015-59.721H194.508z M501.146,353.733l4.066,6.222 h-2.777l-3.705-6.122h-2.217v6.122h-2.379v-14.164h5.522c3.506,0,5.327,1.193,5.327,4.071 C504.983,352.444,503.328,353.501,501.146,353.733z M499.058,351.846c1.788,0,3.344-0.167,3.344-2.146 c0-1.654-1.722-1.921-3.145-1.921h-2.744v4.067H499.058z M511.5,352.873c0,7.41-5.855,12.404-12.409,12.404 c-6.546,0-12.404-4.994-12.404-12.404c0-7.411,5.858-12.405,12.404-12.405C505.645,340.468,511.5,345.462,511.5,352.873z M508.722,352.873c0-5.627-4.3-9.827-9.631-9.827c-5.39,0-9.627,4.2-9.627,9.827c0,5.622,4.237,9.826,9.627,9.826 C504.422,362.699,508.722,358.495,508.722,352.873z M362.063,155.983c-2.158-0.04-3.685,0.234-5.298,0.588c0,0.098,0,0.195,0,0.293 c0.1,0,0.195,0,0.295,0c1.031,2.115,2.849,3.477,4.121,5.299c0.978,2.061,1.959,4.119,2.94,6.177 c0.1-0.098,0.199-0.195,0.295-0.293c1.825-1.283,2.657-3.337,2.649-6.473c-0.732-0.77-0.841-1.732-1.473-2.649 C364.754,157.702,363.124,157.011,362.063,155.983z M504.48,306.938c1.389,1.019,2.32,2.599,4.121,3.239c0-0.1,0-0.199,0-0.295 c-0.948-1.202-1.189-2.861-2.059-4.121c-1.272-1.272-2.554-2.549-3.826-3.826c-3.742-4.965-8.487-9.323-13.535-12.945 c-4.021-2.891-13.033-6.791-14.713-11.474c-0.096-0.1-0.196-0.199-0.296-0.299c2.853-0.32,6.196-1.352,8.829-2.059 c4.424-1.186,8.379-0.878,12.945-2.059c2.063-0.591,4.121-1.181,6.18-1.764c0-0.395,0-0.785,0-1.181 c-2.309-2.37-3.955-5.506-6.471-7.651c-6.592-5.608-13.781-11.216-21.188-15.888c-4.104-2.594-9.183-4.277-13.536-6.475 c-1.464-0.738-4.034-1.123-5.003-2.354c-2.283-2.916-3.53-6.611-5.294-10.006c-3.692-7.113-7.323-14.881-10.596-22.365 c-2.229-5.102-3.688-10.134-6.471-14.713c-13.361-21.967-27.746-35.227-50.023-48.26c-4.744-2.771-10.45-3.865-16.479-5.295 c-3.235-0.195-6.476-0.394-9.711-0.589c-1.975-0.825-4.029-3.241-5.884-4.414c-7.382-4.662-26.315-14.805-31.779-1.47 c-3.452,8.415,5.156,16.627,8.237,20.893c2.163,2.991,4.928,6.346,6.476,9.709c1.015,2.211,1.188,4.43,2.063,6.769 c2.138,5.764,3.996,12.034,6.762,17.362c1.401,2.694,2.944,5.535,4.712,7.944c1.085,1.479,2.939,2.13,3.23,4.414 c-1.813,2.543-1.917,6.489-2.936,9.71c-4.6,14.502-2.865,32.524,3.826,43.258c2.05,3.293,6.886,10.362,13.531,7.649 c5.813-2.368,4.517-9.708,6.18-16.183c0.374-1.471,0.146-2.55,0.882-3.531c0,0.096,0,0.195,0,0.293 c1.768,3.531,3.534,7.062,5.298,10.592c3.922,6.313,10.879,12.915,16.775,17.364c3.053,2.308,5.46,6.3,9.415,7.651 c0-0.1,0-0.199,0-0.299c-0.1,0-0.2,0-0.295,0c-0.77-1.189-1.968-1.688-2.94-2.645c-2.304-2.259-4.865-5.065-6.771-7.652 c-5.364-7.279-10.101-15.247-14.417-23.539c-2.063-3.961-3.855-8.33-5.594-12.359c-0.669-1.555-0.661-3.904-2.059-4.709 c-1.904,2.952-4.707,5.342-6.18,8.828c-2.354,5.574-2.657,12.371-3.53,19.42c-0.516,0.186-0.287,0.059-0.591,0.293 c-4.1-0.986-5.539-5.206-7.061-8.826c-3.851-9.152-4.566-23.891-1.177-34.428c0.877-2.725,4.845-11.312,3.235-13.83 c-0.766-2.514-3.29-3.965-4.703-5.886c-1.756-2.374-3.502-5.497-4.716-8.24c-3.148-7.136-4.62-15.147-7.939-22.362 c-1.588-3.447-4.271-6.939-6.475-10.006c-2.44-3.396-5.173-5.896-7.062-10.006c-0.673-1.459-1.588-3.794-0.59-5.295 c0.315-1.013,0.765-1.435,1.768-1.766c1.709-1.316,6.458,0.438,8.237,1.177c4.716,1.959,8.658,3.826,12.655,6.473 c1.917,1.272,3.858,3.734,6.175,4.415c0.886,0,1.768,0,2.649,0c4.146,0.951,8.787,0.297,12.654,1.472 c6.841,2.079,12.971,5.313,18.538,8.829c16.959,10.707,30.827,25.953,40.313,44.138c1.526,2.928,2.188,5.722,3.53,8.829 c2.711,6.263,6.13,12.706,8.828,18.832c2.691,6.108,5.315,12.275,9.12,17.361c2,2.672,9.73,4.106,13.245,5.592 c2.462,1.039,6.495,2.125,8.824,3.527c4.458,2.689,8.771,5.887,12.949,8.831c2.088,1.473,8.509,4.699,8.825,7.353 c-10.347-0.274-18.252,0.687-25.01,3.535c-1.921,0.807-4.982,0.831-5.298,3.234c1.056,1.106,1.223,2.762,2.063,4.121 c1.609,2.612,4.333,6.109,6.766,7.947c2.657,2.005,5.394,4.15,8.238,5.885c5.065,3.09,10.721,4.853,15.595,7.946 C498.825,302.584,501.678,304.879,504.48,306.938z M420.994,344.776v-58.062H404.16v58.169c0,11.544,8.579,18.02,25.899,19.316 c1.617,0.104,3.235,0.212,4.857,0.212h43.868v-11.22h-44.193C424.72,353.192,420.994,350.706,420.994,344.776z"
          >
            {" "}
          </path>{" "}
        </g>{" "}
      </g>
    </svg>,
    <svg
      className="fill-white group-hover:fill-red-600"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      viewBox="0 0 512 512"
      enableBackground="new 0 0 512 512"
      xmlSpace="preserve"
    >
      <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
      <g
        id="SVGRepo_tracerCarrier"
        strokeLinecap="round"
        strokeLinejoin="round"
      ></g>
      <g id="SVGRepo_iconCarrier">
        {" "}
        <g id="5151e0c8492e5103c096af88a51e8d81">
          {" "}
          <path
            display="inline"
            d="M193.918,208.369c-4.729-10.456-6.849-22.652-3.236-33.731c3.612-11.327,11.703-20.413,19.794-28.878 c22.525-22.531,50.285-39.085,72.316-61.986c12.197-12.573,22.278-27.634,25.762-44.937c2.864-12.695,1.496-25.764-1.117-38.337 c11.7,13.319,15.559,32.363,12.197,49.541c-3.608,19.292-14.316,36.344-26.886,51.031c-10.081,11.827-21.659,22.282-33.731,31.993 c-14.065,11.327-27.88,23.524-36.716,39.457c-7.472,12.943-9.215,28.876-4.11,42.942c8.341,24.146,27.756,42.071,38.338,64.848 c-11.703-10.332-23.152-21.036-33.86-32.361C211.471,236.001,200.889,223.307,193.918,208.369z M257.398,189.448 c-2.115,19.792,8.213,38.462,20.539,53.151c5.972,6.596,11.076,14.687,11.323,23.899c0.251,12.318-6.716,23.774-15.684,31.861 c2.119-0.246,3.612-2.115,5.355-3.11c13.443-8.589,26.385-19.418,32.982-34.227c4.357-10.083,3.362-22.034-2.362-31.371 c-6.724-10.953-15.559-20.662-20.786-32.61c-2.867-6.721-3.862-14.562-1.496-21.657c3.114-9.583,9.834-17.426,16.93-24.272 c19.54-18.544,43.189-31.743,65.844-46.179c-28.629,8.214-56.883,19.542-81.03,37.343 C273.702,153.727,259.515,169.658,257.398,189.448z M393.447,283.052c13.568,0.748,26.882,10.704,29.374,24.397 c2.366,11.825-3.358,23.524-10.705,32.485c-12.075,14.438-28.382,24.771-44.807,33.609c-1.622,0.991-2.99,2.237-4.235,3.608 c21.659-5.478,43.314-13.689,60.867-27.756c9.705-8.091,18.294-18.799,20.163-31.619c1.743-11.076-2.86-22.528-11.077-29.871 c-9.96-9.09-24.021-12.448-37.218-10.704c-7.593,0.995-15.931,2.613-21.158,8.961C380.877,284.921,386.971,282.429,393.447,283.052 z M123.22,318.647c16.303,4.357,33.108,5.603,49.787,6.724c14.936,0.995,29.875,1.246,44.937,1.12 c38.833-0.619,77.916-3.236,116.003-11.699c3.608-0.87,7.593-1.493,10.833-3.733c6.347-4.11,13.313-7.347,20.162-10.583 c-30.995,4.979-62.113,9.215-93.478,11.205c-31.74,1.991-63.731,3.236-95.593,1.121c-9.086-0.87-18.423-1.371-26.886-4.858 c-1.994-0.87-4.733-2.609-3.738-5.227c1.869-3.361,5.603-4.977,8.839-6.72c13.694-6.473,28.629-10.081,43.193-14.313 c-25.021-0.376-49.916,5.971-72.814,15.806c-5.105,2.491-10.83,4.481-14.936,8.714c-1.622,1.739-1.622,4.732,0.247,6.222 C113.511,315.787,118.487,317.28,123.22,318.647z M324.864,352.88c-21.784,3.859-43.694,7.472-65.726,8.589 c-24.147,1.618-48.294,0.247-72.191-2.241c-4.604-0.623-9.211-1.368-13.317-3.483c-2.116-1.246-4.231-3.236-4.106-5.854 c0.247-4.106,3.73-6.967,6.222-9.956c-7.715,2.739-15.434,5.599-21.906,10.708c-2.742,2.116-5.478,5.474-4.733,9.208 c1.125,4.356,5.356,6.97,9.09,8.96c9.208,4.733,19.54,6.846,29.625,8.714c25.511,4.11,51.527,4.235,77.167,2.488 c27.141-2.115,54.148-6.594,80.411-14.313C337.932,362.342,330.836,358.479,324.864,352.88z M188.068,395.951 c-6.97,1.99-14.066,4.357-19.79,8.957c-2.868,2.241-5.105,6.104-3.734,9.713c1.743,4.604,6.1,7.347,10.203,9.705 c10.708,5.854,22.78,8.589,34.604,10.708c26.765,4.229,54.27,3.608,80.908-1.12c15.806-2.989,31.615-7.221,46.301-13.815 c-9.584-3.984-18.917-8.467-27.878-13.693c-15.559,2.738-31.246,5.603-47.178,6.598c-21.032,1.618-42.319-0.125-63.355-2.738 c-4.98-1.121-11.202-1.618-14.563-5.976C181.847,400.677,185.828,398.063,188.068,395.951z M358.345,475.982 c17.424-3.604,34.977-7.719,50.908-15.806c4.976-2.867,11.076-5.979,12.698-11.95c0.87-5.725-5.105-8.714-9.337-11.08 c2.613,2.993,4.356,7.347,1.74,10.83c-4.357,5.853-11.821,8.091-18.42,10.332c-20.66,5.85-42.072,8.216-63.355,10.582 c-56.385,5.102-113.146,6.348-169.528,1.618c-18.92-1.994-38.217-4.109-56.264-10.829c-2.86-1.246-7.217-2.492-7.217-6.352 c1.117-3.354,4.357-5.227,7.217-6.845c12.945-6.595,27.384-10.207,41.822-11.077c-4.228-2.491-9.208-2.738-14.062-2.613 c-12.076,0.373-23.9,3.483-35.349,7.347c-9.834,3.604-19.916,7.59-27.76,14.811c-3.111,2.735-5.971,7.962-2.739,11.699 c4.98,5.353,12.699,6.72,19.54,8.338c38.338,6.599,77.171,10.328,116.011,11.699C255.781,488.184,307.684,485.942,358.345,475.982z M409.378,482.706c-23.402,7.468-47.672,11.574-71.822,14.936c-41.696,5.227-83.769,6.845-125.716,5.603 c-25.515-0.995-51.03-2.738-76.176-6.974c5.85,3.984,13.071,5.227,19.794,7.096c28.257,5.976,57.255,7.096,86.01,7.966 c42.19,0.748,84.387-0.87,125.962-7.468c19.669-3.48,39.459-7.715,57.13-16.927c9.215-4.854,18.552-12.326,20.163-23.152 C435.391,473.741,421.951,478.349,409.378,482.706z"
          >
            {" "}
          </path>{" "}
        </g>{" "}
      </g>
    </svg>,
    <svg
      className="fill-white group-hover:fill-red-600"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
      <g
        id="SVGRepo_tracerCarrier"
        strokeLinecap="round"
        strokeLinejoin="round"
      ></g>
      <g id="SVGRepo_iconCarrier">
        <path d="M20.205 16.392c-2.469 3.289-7.741 2.179-11.122 2.338 0 0-.599.034-1.201.133 0 0 .228-.097.519-.198 2.374-.821 3.496-.986 4.939-1.727 2.71-1.388 5.408-4.413 5.957-7.555-1.032 3.022-4.17 5.623-7.027 6.679-1.955.722-5.492 1.424-5.493 1.424a5.28 5.28 0 0 1-.143-.076c-2.405-1.17-2.475-6.38 1.894-8.059 1.916-.736 3.747-.332 5.818-.825 2.208-.525 4.766-2.18 5.805-4.344 1.165 3.458 2.565 8.866.054 12.21zm.042-13.28a9.212 9.212 0 0 1-1.065 1.89 9.982 9.982 0 0 0-7.167-3.031C6.492 1.971 2 6.463 2 11.985a9.983 9.983 0 0 0 3.205 7.334l.22.194a.856.856 0 1 1 .001.001l.149.132A9.96 9.96 0 0 0 12.015 22c5.278 0 9.613-4.108 9.984-9.292.274-2.539-.476-5.763-1.752-9.596"></path>
      </g>
    </svg>,
    <svg
      className="fill-white group-hover:fill-red-600"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
      <g
        id="SVGRepo_tracerCarrier"
        strokeLinecap="round"
        strokeLinejoin="round"
      ></g>
      <g id="SVGRepo_iconCarrier">
        <path d="M20.205 16.392c-2.469 3.289-7.741 2.179-11.122 2.338 0 0-.599.034-1.201.133 0 0 .228-.097.519-.198 2.374-.821 3.496-.986 4.939-1.727 2.71-1.388 5.408-4.413 5.957-7.555-1.032 3.022-4.17 5.623-7.027 6.679-1.955.722-5.492 1.424-5.493 1.424a5.28 5.28 0 0 1-.143-.076c-2.405-1.17-2.475-6.38 1.894-8.059 1.916-.736 3.747-.332 5.818-.825 2.208-.525 4.766-2.18 5.805-4.344 1.165 3.458 2.565 8.866.054 12.21zm.042-13.28a9.212 9.212 0 0 1-1.065 1.89 9.982 9.982 0 0 0-7.167-3.031C6.492 1.971 2 6.463 2 11.985a9.983 9.983 0 0 0 3.205 7.334l.22.194a.856.856 0 1 1 .001.001l.149.132A9.96 9.96 0 0 0 12.015 22c5.278 0 9.613-4.108 9.984-9.292.274-2.539-.476-5.763-1.752-9.596"></path>
      </g>
    </svg>,
    <svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" fill="none">
      <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
      <g
        id="SVGRepo_tracerCarrier"
        strokeLinecap="round"
        strokeLinejoin="round"
      ></g>
      <g id="SVGRepo_iconCarrier">
        {" "}
        <g className="fill-white group-hover:fill-red-600">
          {" "}
          <path d="M4.51 7.687c0 .197.02.357.058.475.042.117.096.245.17.384a.233.233 0 01.037.123c0 .053-.032.107-.1.16l-.336.224a.255.255 0 01-.138.048c-.054 0-.107-.026-.16-.074a1.652 1.652 0 01-.192-.251 4.137 4.137 0 01-.164-.315c-.416.491-.937.737-1.565.737-.447 0-.804-.129-1.064-.385-.261-.256-.394-.598-.394-1.025 0-.454.16-.822.484-1.1.325-.278.756-.416 1.304-.416.18 0 .367.016.564.042.197.027.4.07.612.118v-.39c0-.406-.085-.689-.25-.854-.17-.166-.458-.246-.868-.246-.186 0-.377.022-.574.07a4.23 4.23 0 00-.575.181 1.525 1.525 0 01-.186.07.326.326 0 01-.085.016c-.075 0-.112-.054-.112-.166v-.262c0-.085.01-.15.037-.186a.399.399 0 01.15-.113c.185-.096.409-.176.67-.24.26-.07.537-.101.83-.101.633 0 1.096.144 1.394.432.293.288.442.726.442 1.314v1.73h.01zm-2.161.811c.175 0 .356-.032.548-.096.192-.064.362-.182.505-.342a.848.848 0 00.181-.341c.032-.129.054-.283.054-.465V7.03a4.43 4.43 0 00-.49-.09 3.996 3.996 0 00-.5-.033c-.357 0-.617.07-.793.214-.176.144-.26.347-.26.614 0 .25.063.437.196.566.128.133.314.197.559.197zm4.273.577c-.096 0-.16-.016-.202-.054-.043-.032-.08-.106-.112-.208l-1.25-4.127a.938.938 0 01-.048-.214c0-.085.042-.133.127-.133h.522c.1 0 .17.016.207.053.043.032.075.107.107.208l.894 3.535.83-3.535c.026-.106.058-.176.101-.208a.365.365 0 01.213-.053h.426c.1 0 .17.016.212.053.043.032.08.107.102.208l.84 3.578.92-3.578a.459.459 0 01.107-.208.347.347 0 01.208-.053h.495c.085 0 .133.043.133.133 0 .027-.006.054-.01.086a.768.768 0 01-.038.133l-1.283 4.127c-.031.107-.069.177-.111.209a.34.34 0 01-.203.053h-.457c-.101 0-.17-.016-.213-.053-.043-.038-.08-.107-.101-.214L8.213 5.37l-.82 3.439c-.026.107-.058.176-.1.213-.043.038-.118.054-.213.054h-.458zm6.838.144a3.51 3.51 0 01-.82-.096c-.266-.064-.473-.134-.612-.214-.085-.048-.143-.101-.165-.15a.38.38 0 01-.031-.149v-.272c0-.112.042-.166.122-.166a.3.3 0 01.096.016c.032.011.08.032.133.054.18.08.378.144.585.187.213.042.42.064.633.064.336 0 .596-.059.777-.176a.575.575 0 00.277-.508.52.52 0 00-.144-.373c-.095-.102-.276-.193-.537-.278l-.772-.24c-.388-.123-.676-.305-.851-.545a1.275 1.275 0 01-.266-.774c0-.224.048-.422.143-.593.096-.17.224-.32.384-.438.16-.122.34-.213.553-.277.213-.064.436-.091.67-.091.118 0 .24.005.357.021.122.016.234.038.346.06.106.026.208.052.303.085.096.032.17.064.224.096a.461.461 0 01.16.133.289.289 0 01.047.176v.251c0 .112-.042.171-.122.171a.552.552 0 01-.202-.064 2.428 2.428 0 00-1.022-.208c-.303 0-.543.048-.708.15-.165.1-.25.256-.25.475 0 .149.053.277.16.379.106.101.303.202.585.293l.756.24c.383.123.66.294.825.513.165.219.244.47.244.748 0 .23-.047.437-.138.619a1.435 1.435 0 01-.388.47c-.165.133-.362.23-.591.299-.24.075-.49.112-.761.112z"></path>{" "}
          <path
            fillRule="evenodd"
            d="M14.465 11.813c-1.75 1.297-4.294 1.986-6.481 1.986-3.065 0-5.827-1.137-7.913-3.027-.165-.15-.016-.353.18-.235 2.257 1.313 5.04 2.109 7.92 2.109 1.941 0 4.075-.406 6.039-1.239.293-.133.543.192.255.406z"
            clipRule="evenodd"
          ></path>{" "}
          <path
            fillRule="evenodd"
            d="M15.194 10.98c-.223-.287-1.479-.138-2.048-.069-.17.022-.197-.128-.043-.24 1-.705 2.645-.502 2.836-.267.192.24-.053 1.89-.99 2.68-.143.123-.281.06-.217-.1.212-.53.686-1.72.462-2.003z"
            clipRule="evenodd"
          ></path>{" "}
        </g>{" "}
      </g>
    </svg>,
    <svg
      viewBox="0 0 20 20"
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      className="fill-white group-hover:fill-red-600"
    >
      <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
      <g
        id="SVGRepo_tracerCarrier"
        strokeLinecap="round"
        strokeLinejoin="round"
      ></g>
      <g id="SVGRepo_iconCarrier">
        {" "}
        <title>github [#142]</title> <desc>Created with Sketch.</desc>{" "}
        <defs> </defs>{" "}
        <g
          id="Page-1"
          stroke="none"
          strokeWidth="1"
          fill="none"
          fillRule="evenodd"
        >
          {" "}
          <g
            id="Dribbble-Light-Preview"
            transform="translate(-140.000000, -7559.000000)"
            className="fill-white group-hover:fill-red-600"
          >
            {" "}
            <g id="icons" transform="translate(56.000000, 160.000000)">
              {" "}
              <path
                d="M94,7399 C99.523,7399 104,7403.59 104,7409.253 C104,7413.782 101.138,7417.624 97.167,7418.981 C96.66,7419.082 96.48,7418.762 96.48,7418.489 C96.48,7418.151 96.492,7417.047 96.492,7415.675 C96.492,7414.719 96.172,7414.095 95.813,7413.777 C98.04,7413.523 100.38,7412.656 100.38,7408.718 C100.38,7407.598 99.992,7406.684 99.35,7405.966 C99.454,7405.707 99.797,7404.664 99.252,7403.252 C99.252,7403.252 98.414,7402.977 96.505,7404.303 C95.706,7404.076 94.85,7403.962 94,7403.958 C93.15,7403.962 92.295,7404.076 91.497,7404.303 C89.586,7402.977 88.746,7403.252 88.746,7403.252 C88.203,7404.664 88.546,7405.707 88.649,7405.966 C88.01,7406.684 87.619,7407.598 87.619,7408.718 C87.619,7412.646 89.954,7413.526 92.175,7413.785 C91.889,7414.041 91.63,7414.493 91.54,7415.156 C90.97,7415.418 89.522,7415.871 88.63,7414.304 C88.63,7414.304 88.101,7413.319 87.097,7413.247 C87.097,7413.247 86.122,7413.234 87.029,7413.87 C87.029,7413.87 87.684,7414.185 88.139,7415.37 C88.139,7415.37 88.726,7417.2 91.508,7416.58 C91.513,7417.437 91.522,7418.245 91.522,7418.489 C91.522,7418.76 91.338,7419.077 90.839,7418.982 C86.865,7417.627 84,7413.783 84,7409.253 C84,7403.59 88.478,7399 94,7399"
                id="github-[#142]"
              >
                {" "}
              </path>{" "}
            </g>{" "}
          </g>{" "}
        </g>{" "}
      </g>
    </svg>,
    <svg
      className="fill-white group-hover:fill-red-600"
      viewBox="0 0 846.66 846.66"
      style={{
        shapeRendering: "geometricPrecision",
        textRendering: "geometricPrecision",
        imageRendering: "optimizeQuality",
        fillRule: "evenodd",
        clipRule: "evenodd",
      }}
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      stroke="#ffffff"
    >
      <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
      <g
        id="SVGRepo_tracerCarrier"
        strokeLinecap="round"
        strokeLinejoin="round"
      ></g>
      <g id="SVGRepo_iconCarrier">
        <defs>
          <style type="text/css">{`.fil0 {fill:white;fillRule:nonzero}`}</style>
        </defs>
        <g id="Layer_x0020_1">
          <path
            className="fil0"
            d="M539.75 794.68c27.15,0 27.15,41.29 0,41.29l-497.47 0c-11.4,0 -20.64,-9.25 -20.64,-20.65l0 -621.69c0,-5.7 2.31,-10.87 6.04,-14.6l162.3 -162.29c4.03,-4.03 9.31,-6.05 14.59,-6.05l466.89 0c11.4,0 20.65,9.25 20.65,20.65l0 361.36c0,27.16 -41.29,27.16 -41.29,0l0 -340.72 -437.7 0 -150.19 150.2 0 592.5 476.82 0zm-351.21 -181.98c-27.16,0 -27.16,-41.29 0,-41.29l306.67 0c27.16,0 27.16,41.29 0,41.29l-306.67 0zm0 -274.68c-27.16,0 -27.16,-41.29 0,-41.29l306.67 0c27.16,0 27.16,41.29 0,41.29l-306.67 0zm0 91.56c-27.16,0 -27.16,-41.29 0,-41.29l306.67 0c27.16,0 27.16,41.29 0,41.29l-306.67 0zm0 91.56c-27.16,0 -27.16,-41.29 0,-41.29l306.67 0c27.16,0 27.16,41.29 0,41.29l-306.67 0zm0 -274.68c-27.16,0 -27.16,-41.29 0,-41.29l306.67 0c27.16,0 27.16,41.29 0,41.29l-306.67 0zm496.57 238.25c49.84,0 90.24,40.4 90.24,90.24 0,18.1 -5.33,34.95 -14.5,49.07 37.57,24.93 61.47,66.08 64.13,111.2 1.59,27.06 -39.55,29.47 -41.13,2.42 -2.11,-35.69 -22.61,-67.48 -54.13,-84.24 -13.16,7.5 -28.38,11.78 -44.61,11.78 -17.56,0 -33.95,-5.01 -47.81,-13.69 -33.44,16.12 -55.6,49.04 -57.79,86.15 -1.59,27.05 -42.72,24.64 -41.13,-2.42 2.79,-47.18 28.75,-89.88 69.08,-114.28 -7.99,-13.47 -12.58,-29.19 -12.58,-45.99 0,-49.83 40.4,-90.24 90.23,-90.24zm0 41.29c-27.03,0 -48.94,21.92 -48.94,48.95 0,27.03 21.91,48.94 48.94,48.94 27.03,0 48.95,-21.91 48.95,-48.94 0,-27.03 -21.91,-48.95 -48.95,-48.95z"
          />
        </g>
      </g>
    </svg>,
  ];

  const roadmapData = [
    { title: "HTML/CSS/JS", duration: "10 Days", icon: icons[0] },
    { title: "Java", duration: "40 Days - 50 Days", icon: icons[1] },
    { title: "Java 8+ Features", duration: "5 Days – 10 Days", icon: icons[2] },
    { title: "MySQL", duration: "10 days – 15 days", icon: icons[3] },
    { title: "JSP/Sevlets", duration: "10 days – 15 days", icon: icons[4] },
    { title: "Spring Boot", duration: "20 days – 25 days", icon: icons[5] },
    { title: "Microservices", duration: "5 days – 10 days", icon: icons[6] },
    { title: "AWS/Heroku cloud", duration: "10 days", icon: icons[7] },
    { title: "Tools: GIT, GIT Hub", duration: "5 Days", icon: icons[8] },
    { title: "Mock Interviews", duration: "5 days", icon: icons[9] },
  ];

  const moduleData = [
    {
      module: "Module 1: Introduction to Java",
      questions: [
        {
          question: "What is Java?",
          descriptions: [
            {
              description: "Overview of Java",
              answers: [
                "Definition and purpose",
                "History and evolution of Java",
              ],
            },
            {
              description: "Java’s Platform Independence",
              answers: [
                "Write Once, Run Anywhere (WORA) principle",
                "Bytecode and JVM",
              ],
            },
            {
              description: "Editions",
              answers: ["Java SE, Java EE, Java ME"],
            },
          ],
        },
        {
          question: "Java Features",
          descriptions: [
            {
              description: "Object-Oriented",
              answers: [
                "Encapsulation",
                "Inheritance",
                "Polymorphism",
                "Abstraction",
              ],
            },
            {
              description: "Platform-Independent",
              answers: ["JVM architecture"],
            },
            {
              description: "Simple and Secure",
              answers: [
                "Simplified syntax compared to C/C++",
                "Security features in Java",
              ],
            },
            {
              description: "Robust and Multithreaded",
              answers: [
                "Strong memory management",
                "Built-in support for multithreading",
              ],
            },
            {
              description: "High Performance",
              answers: ["Just-In-Time (JIT) Compiler"],
            },
            {
              description: "Distributed Computing",
              answers: ["Networking capabilities"],
            },
          ],
        },
        {
          question: "Comparison: C vs C++ vs Java",
          descriptions: [
            {
              description: "Key Differences and Similarities",
              answers: [
                "Memory management",
                "Object-oriented features",
                "Platform dependency",
              ],
            },
            {
              description: "Use Cases for Each Language",
              answers: [
                "System programming",
                "Application development",
                "Enterprise solutions",
              ],
            },
          ],
        },
      ],
    },
    {
      module: "Module 2: Java Development Environment",
      questions: [
        {
          question: "JDK, JRE, JVM",
          descriptions: [
            {
              description: "Understanding JDK (Java Development Kit)",
              answers: ["Tools included: compiler, debugger, etc."],
            },
            {
              description: "JRE (Java Runtime Environment) Explained",
              answers: ["Components and role"],
            },
            {
              description: "JVM (Java Virtual Machine) and Its Role",
              answers: ["JVM architecture", "Bytecode execution"],
            },
          ],
        },
        {
          question: "Setting Up the Development Environment",
          descriptions: [
            {
              description: "Installing Java",
              answers: ["Downloading and installing JDK"],
            },
            {
              description: "Integrated Development Environments (IDEs)",
              answers: ["Introduction to Eclipse, IntelliJ IDEA, NetBeans"],
            },
            {
              description: "Configuring IDEs",
              answers: [
                "Setting up JDK in IDE",
                "Basic IDE navigation and usage",
              ],
            },
          ],
        },
      ],
    },
    {
      module: "Module 3: Core Java Concepts",
      questions: [
        {
          question: "Classes and Objects",
          descriptions: [
            {
              description: "Defining Classes",
              answers: ["Class structure: fields, methods, constructors"],
            },
            {
              description: "Creating Objects",
              answers: ["Instantiation using new keyword"],
            },
            {
              description: "Object Lifecycle",
              answers: ["Creation, usage, garbage collection"],
            },
          ],
        },
        {
          question: "Variables Declaration & Types",
          descriptions: [
            {
              description: "Primitive Data Types",
              answers: ["byte, short, int, long, float, double, char, boolean"],
            },
            {
              description: "Reference Data Types",
              answers: ["Objects, arrays"],
            },
            {
              description: "Variable Scope and Lifetime",
              answers: ["Local, instance, static variables"],
            },
          ],
        },
        {
          question: "Methods Definition & Types",
          descriptions: [
            {
              description: "Method Declaration",
              answers: ["Syntax, return types, parameters"],
            },
            {
              description: "Parameter Passing",
              answers: ["Pass-by-value concept"],
            },
            {
              description: "Method Overloading and Overriding",
              answers: ["Compile-time vs runtime polymorphism"],
            },
          ],
        },
        {
          question: "Packages",
          descriptions: [
            {
              description: "Creating and Using Packages",
              answers: ["Package declaration and directory structure"],
            },
            {
              description: "Access Control with Packages",
              answers: ["Importing packages"],
            },
            {
              description: "Access Specifiers",
              answers: ["public, private, protected, default"],
            },
          ],
        },
      ],
    },
    {
      module: "Module 4: Object-Oriented Programming (OOP) Concepts",
      questions: [
        {
          question: "Inheritance",
          descriptions: [
            {
              description: "Types of Inheritance",
              answers: ["Single, Multilevel, Hierarchical, Hybrid"],
            },
            {
              description: "Superclass and Subclass",
              answers: ["Extending classes"],
            },
            {
              description: "super Keyword Usage",
              answers: ["Accessing superclass methods and constructors"],
            },
          ],
        },
        {
          question: "Polymorphism",
          descriptions: [
            {
              description: "Compile-Time Polymorphism",
              answers: ["Method overloading"],
            },
            {
              description: "Runtime Polymorphism",
              answers: ["Method overriding", "Dynamic method dispatch"],
            },
          ],
        },
        {
          question: "Encapsulation",
          descriptions: [
            {
              description: "Data Hiding and Access Control",
              answers: ["Private fields with public getters and setters"],
            },
            {
              description: "Benefits of Encapsulation",
              answers: ["Maintainability, flexibility, security"],
            },
          ],
        },
        {
          question: "Data Abstraction",
          descriptions: [
            {
              description: "Abstract Classes and Interfaces",
              answers: ["Defining abstract methods", "Implementing interfaces"],
            },
            {
              description:
                "Differences Between Abstract Classes and Interfaces",
              answers: [],
            },
          ],
        },
      ],
    },
    {
      module: "Module 5: Control Flow in Java",
      questions: [
        {
          question: "Conditional Statements",
          descriptions: [
            {
              description: "if-else Statements",
              answers: ["Syntax and usage", "Nested if-else"],
            },
            {
              description: "switch Statements",
              answers: ["Syntax and use cases", "Enhanced switch (Java 14+)"],
            },
            {
              description: "Ternary Operator",
              answers: ["Syntax and practical examples"],
            },
          ],
        },
        {
          question: "Looping Statements",
          descriptions: [
            {
              description: "for Loops",
              answers: [
                "Traditional for loop",
                "Enhanced for loop (for-each)",
                "Syntax and usage",
              ],
            },
            {
              description: "while Loops",
              answers: ["Syntax and usage"],
            },
            {
              description: "do-while Loops",
              answers: ["Syntax and differences from while loops"],
            },
            {
              description: "Break and Continue Statements",
              answers: ["Exiting loops", "Skipping iterations"],
            },
            {
              description: "Nested Loops",
              answers: ["Implementing multiple levels of iteration"],
            },
            {
              description: "Best Practices for Loops and Conditionals",
              answers: [
                "Efficiency",
                "Readability",
                "Avoiding common pitfalls",
              ],
            },
          ],
        },
      ],
    },
    {
      module: "Module 6: Advanced Java Concepts",
      questions: [
        {
          question: "Object Class & Methods",
          descriptions: [
            {
              description: "The Object Class",
              answers: ["Root of the class hierarchy"],
            },
            {
              description: "Common Object Methods",
              answers: [
                "toString()",
                "equals()",
                "hashCode()",
                "clone()",
                "finalize()",
              ],
            },
          ],
        },
        {
          question: "String Handling",
          descriptions: [
            {
              description: "String Class and Methods",
              answers: ["Immutable nature", "Common methods"],
            },
            {
              description: "StringBuilder and StringBuffer",
              answers: ["Mutable alternatives", "Thread safety"],
            },
          ],
        },
        {
          question: "Exception Handling",
          descriptions: [
            {
              description: "Try-Catch Blocks",
              answers: ["Syntax", "Handling multiple exceptions"],
            },
            {
              description: "Throw and Throws",
              answers: ["Propagating exceptions"],
            },
            {
              description: "Custom Exceptions",
              answers: ["Creating user-defined exceptions"],
            },
          ],
        },
        {
          question: "File Handling",
          descriptions: [
            {
              description: "Reading and Writing Files",
              answers: [
                "FileReader",
                "FileWriter",
                "BufferedReader",
                "BufferedWriter",
              ],
            },
            {
              description: "File I/O Streams",
              answers: [
                "InputStream",
                "OutputStream",
                "FileInputStream",
                "FileOutputStream",
              ],
            },
          ],
        },
        {
          question: "Multithreading",
          descriptions: [
            {
              description: "Creating Threads",
              answers: [
                "Extending Thread class",
                "Implementing Runnable interface",
              ],
            },
            {
              description: "Thread Lifecycle",
              answers: ["States and transitions"],
            },
            {
              description: "Thread Priority and Scheduling",
              answers: [],
            },
            {
              description: "Synchronization",
              answers: [
                "Synchronized Methods and Blocks",
                "Ensuring thread safety",
              ],
            },
            {
              description: "Locks and Concurrency",
              answers: ["ReentrantLock", "ReadWriteLock"],
            },
          ],
        },
        {
          question: "Collection Framework",
          descriptions: [
            {
              description: "List, Set, Map Interfaces",
              answers: ["Common Implementations"],
            },
            {
              description: "Collections Utility Class",
              answers: [],
            },
            {
              description: "Arrays Utility Class",
              answers: [],
            },
            {
              description: "Comparable & Comparator Interfaces",
              answers: [],
            },
            {
              description: "Marker Interfaces",
              answers: [],
            },
          ],
        },
      ],
    },
    {
      module: "Module 7: Design Patterns in Java",
      questions: [
        {
          question: "Creational Design Patterns",
          descriptions: [
            {
              description: "Singleton Design Pattern",
              answers: ["Implementation and use cases"],
            },
            {
              description: "Factory Design Pattern",
              answers: ["Simple Factory", "Factory Method", "Abstract Factory"],
            },
          ],
        },
        {
          question: "Behavioral Design Patterns",
          descriptions: [
            {
              description: "Observer Design Pattern",
              answers: [
                "Subject and Observer roles",
                "Implementation examples",
              ],
            },
          ],
        },
        {
          question: "Structural Design Patterns",
          descriptions: [
            {
              description: "Facade Design Pattern",
              answers: ["Simplifying complex subsystem interfaces"],
            },
          ],
        },
        {
          question: "J2EE Design Patterns",
          descriptions: [
            {
              description: "Inversion of Control (IoC)",
              answers: ["Dependency Injection principles"],
            },
            {
              description: "Model-View-Controller (MVC)",
              answers: ["Separating concerns in application architecture"],
            },
          ],
        },
      ],
    },
    {
      module: "Module 8: SOLID Principles",
      questions: [
        {
          question: "Single Responsibility Principle (SRP)",
          descriptions: [
            {
              description: "Definition and Importance",
              answers: [],
            },
            {
              description: "Examples and Best Practices",
              answers: [],
            },
          ],
        },
        {
          question: "Open-Closed Principle (OCP)",
          descriptions: [
            {
              description: "Definition and Importance",
              answers: [],
            },
            {
              description: "Extending vs Modifying Code",
              answers: [],
            },
          ],
        },
        {
          question: "Liskov Substitution Principle (LSP)",
          descriptions: [
            {
              description: "Definition and Importance",
              answers: [],
            },
            {
              description: "Ensuring Substitutability",
              answers: [],
            },
          ],
        },
        {
          question: "Interface Segregation Principle (ISP)",
          descriptions: [
            {
              description: "Definition and Importance",
              answers: [],
            },
            {
              description: "Designing Focused Interfaces",
              answers: [],
            },
          ],
        },
        {
          question: "Dependency Inversion Principle (DIP)",
          descriptions: [
            {
              description: "Definition and Importance",
              answers: [],
            },
            {
              description: "High-level vs Low-level Modules",
              answers: [],
            },
          ],
        },
      ],
    },
    {
      module: "Module 9: Java Database Connectivity (JDBC)",
      questions: [
        {
          question: "Introduction to JDBC",
          descriptions: [
            {
              description: "Overview and Architecture",
              answers: [],
            },
            {
              description: "JDBC Drivers Types",
              answers: [],
            },
          ],
        },
        {
          question: "Connecting to Databases",
          descriptions: [
            {
              description: "Establishing Connections",
              answers: ["DriverManager", "DataSource"],
            },
            {
              description: "Database URL Syntax",
              answers: [],
            },
            {
              description: "Handling Connection Exceptions",
              answers: [],
            },
          ],
        },
        {
          question: "Executing Queries",
          descriptions: [
            {
              description: "CRUD Operations",
              answers: ["Create", "Read", "Update", "Delete using SQL"],
            },
          ],
        },
        {
          question: "Prepared Statements",
          descriptions: [
            {
              description: "Preventing SQL Injection",
              answers: [],
            },
            {
              description: "Parameterized Queries",
              answers: [],
            },
          ],
        },
        {
          question: "ResultSet Handling",
          descriptions: [
            {
              description: "Navigating and Retrieving Data",
              answers: [],
            },
          ],
        },
      ],
    },
    {
      module: "Module 10: Java 8 Features",
      questions: [
        {
          question: "Functional Interfaces",
          descriptions: [
            {
              description: "Definition and Purpose",
              answers: [],
            },
            {
              description: "Common Functional Interfaces",
              answers: ["Predicate", "Function", "Consumer", "Supplier"],
            },
          ],
        },
        {
          question: "Lambda Expressions",
          descriptions: [
            {
              description: "Syntax and Usage",
              answers: [],
            },
            {
              description: "Benefits of Lambdas",
              answers: [],
            },
            {
              description: "Using Lambdas with Collections",
              answers: [],
            },
          ],
        },
        {
          question: "Streams API",
          descriptions: [
            {
              description: "Introduction to Streams",
              answers: [],
            },
            {
              description: "Stream Creation and Operations",
              answers: [],
            },
            {
              description: "Intermediate and Terminal Operations",
              answers: ["filter()", "map()", "collect()"],
            },
            {
              description: "Parallel Streams",
              answers: ["Enhancing Performance with Parallelism"],
            },
          ],
        },
        {
          question: "Method & Constructor References",
          descriptions: [
            {
              description: "Types of Method References",
              answers: ["Static", "Instance", "Constructor References"],
            },
            {
              description: "Usage Examples",
              answers: [],
            },
            {
              description: "Simplifying Lambda Expressions",
              answers: [],
            },
          ],
        },
      ],
    },
    {
      module: "Module 11: MySQL",
      questions: [
        {
          question: "Introduction and Software Installation",
          descriptions: [
            {
              description: "",
              answers: [],
            },
          ],
        },
        {
          question: "DataTypes and Constraints",
          descriptions: [
            {
              description: "",
              answers: [],
            },
          ],
        },
        {
          question: "SQL Commands",
          descriptions: [
            {
              description: "DDL",
              answers: [],
            },
            {
              description: "DML",
              answers: [],
            },
            {
              description: "DQL, DCL, TCL",
              answers: [],
            },
          ],
        },
        {
          question: "Aggregate Functions and Operators",
          descriptions: [
            {
              description: "",
              answers: [],
            },
          ],
        },
        {
          question: "String Functions and Date Function",
          descriptions: [
            {
              description: "",
              answers: [],
            },
          ],
        },
        {
          question: "Clauses",
          descriptions: [
            {
              description: "",
              answers: [],
            },
          ],
        },
        {
          question: "Subquery",
          descriptions: [
            {
              description: "",
              answers: [],
            },
          ],
        },
        {
          question: "Joins",
          descriptions: [
            {
              description: "LEFT, RIGHT, INNER, CROSS, SELF Joins",
              answers: [],
            },
          ],
        },
        {
          question: "Views and Index",
          descriptions: [
            {
              description: "",
              answers: [],
            },
          ],
        },
        {
          question: "Functions",
          descriptions: [
            {
              description: "Date, String, Numeric Functions",
              answers: [],
            },
          ],
        },
        {
          question: "Stored Procedure",
          descriptions: [
            {
              description: "If-Else, Switch Case, Loops",
              answers: [],
            },
          ],
        },
        {
          question: "Cursor",
          descriptions: [
            {
              description: "",
              answers: [],
            },
          ],
        },
        {
          question: "Normalization and De-normalization",
          descriptions: [
            {
              description: "",
              answers: [],
            },
          ],
        },
      ],
    },
    {
      module: "Module 12: Web Development Basics",
      questions: [
        {
          question: "Introduction to HTML, CSS, and JavaScript",
          descriptions: [
            {
              description: "Basics of HTML",
              answers: ["Structure", "Elements", "Attributes"],
            },
            {
              description: "Semantic HTML",
              answers: ["Using appropriate HTML5 elements"],
            },
          ],
        },
        {
          question: "Styling with CSS",
          descriptions: [
            {
              description: "Selectors, properties, layouts",
              answers: [],
            },
            {
              description: "CSS selectors and properties",
              answers: [],
            },
            {
              description: "Responsive design principles",
              answers: ["Media queries", "Flexible grids"],
            },
          ],
        },
        {
          question: "JavaScript Fundamentals",
          descriptions: [
            {
              description: "Syntax, variables, functions",
              answers: [],
            },
            {
              description: "Variable declaration, data types, function syntax",
              answers: [],
            },
            {
              description: "DOM manipulation and event handling",
              answers: ["Accessing and modifying the DOM"],
            },
          ],
        },
      ],
    },
    {
      module: "Module 13: Java Server Pages (JSP) and Servlets",
      questions: [
        {
          question: "Overview of JSP and Servlets",
          descriptions: [
            {
              description: "Servlets",
              answers: [
                "Servlet lifecycle",
                "Handling HTTP requests and responses",
                "Request and Response objects",
              ],
            },
          ],
        },
        {
          question: "Java Server Pages (JSP)",
          descriptions: [
            {
              description: "JSP syntax and directives",
              answers: [],
            },
            {
              description: "JSP tags, expressions, and scriptlets",
              answers: [],
            },
            {
              description: "JSP lifecycle and compilation",
              answers: ["Compilation and translation process"],
            },
          ],
        },
        {
          question: "Creating Dynamic Web Content",
          descriptions: [
            {
              description: "Form Handling",
              answers: ["Processing form data with Servlets"],
            },
            {
              description: "Session Management",
              answers: ["Cookies", "HttpSession"],
            },
            {
              description: "JSP Expression Language (EL)",
              answers: ["Simplifying data access in JSP"],
            },
          ],
        },
      ],
    },
    {
      module: "Module 14: Spring Framework",
      questions: [
        {
          question: "Spring Core",
          descriptions: [
            {
              description: "Inversion of Control (IoC)",
              answers: ["Understanding Dependency Injection (DI) concepts"],
            },
            {
              description: "Bean lifecycle and scopes",
              answers: ["Singleton, Prototype, and other bean scopes"],
            },
          ],
        },
        {
          question: "Spring Configuration",
          descriptions: [
            {
              description: "XML-based configuration",
              answers: ["Configuring beans and properties with XML"],
            },
            {
              description: "Annotation-based configuration",
              answers: ["Using @Configuration, @Bean, etc."],
            },
            {
              description: "Java-based configuration",
              answers: ["Using @Configuration"],
            },
          ],
        },
        {
          question: "Spring MVC",
          descriptions: [
            {
              description: "Model-View-Controller Architecture",
              answers: ["DispatcherServlet, Controllers, Views, Models"],
            },
            {
              description: "Request Mapping and Handling",
              answers: [
                "@Controller, @RequestMapping, @GetMapping, @PostMapping",
              ],
            },
            {
              description: "View Resolvers",
              answers: ["Configuring JSP, Thymeleaf, etc."],
            },
            {
              description: "Form Handling and Validation",
              answers: [
                "Binding form data using @Valid and validation annotations",
              ],
            },
          ],
        },
        {
          question: "Spring Boot",
          descriptions: [
            {
              description: "Introduction to Spring Boot",
              answers: ["Benefits and features of Spring Boot"],
            },
            {
              description: "Creating Spring Boot Applications",
              answers: ["Starter projects, auto-configuration"],
            },
            {
              description: "Spring Boot Actuator",
              answers: ["Monitoring and management"],
            },
            {
              description: "Spring Boot CLI",
              answers: [],
            },
          ],
        },
        {
          question: "Spring REST Service",
          descriptions: [
            {
              description: "Building RESTful APIs",
              answers: ["@RestController, @RequestBody, @ResponseBody"],
            },
            {
              description: "Handling HTTP Methods",
              answers: ["GET, POST, PUT, DELETE"],
            },
            {
              description: "Content Negotiation",
              answers: ["JSON, XML support"],
            },
            {
              description: "Exception Handling in REST APIs",
              answers: ["@ControllerAdvice, @ExceptionHandler"],
            },
          ],
        },
        {
          question: "Spring Data JPA",
          descriptions: [
            {
              description: "Introduction to JPA",
              answers: ["Entity, Repository, Service layers"],
            },
            {
              description: "Configuring Spring Data JPA",
              answers: [
                "CRUD Operations with Repositories",
                "JpaRepository, CrudRepository",
              ],
            },
            {
              description: "Query Methods and JPQL",
              answers: ["Derived queries, custom queries"],
            },
          ],
        },
        {
          question: "Spring Security",
          descriptions: [
            {
              description: "Authentication and Authorization",
              answers: ["Configuring security in Spring applications"],
            },
            {
              description: "Securing REST APIs",
              answers: ["Method-Level Security", "@PreAuthorize, @Secured"],
            },
            {
              description: "OAuth2 Integration",
              answers: [],
            },
            {
              description: "JSON Web Tokens (JWT)",
              answers: [
                "Understanding JWT",
                "Implementing JWT Authentication",
                "Generating and validating tokens",
                "Securing Endpoints with JWT",
                "Configuring Spring Security with JWT",
              ],
            },
          ],
        },
      ],
    },
    {
      module: "Module 15: Microservices Architecture",
      questions: [
        {
          question: "Introduction to Microservices",
          descriptions: [
            {
              description: "Understanding Microservices",
              answers: ["Definition and Characteristics"],
            },
            {
              description: "Advantages over Monolithic Architectures",
              answers: ["Scalability, flexibility, resilience"],
            },
          ],
        },
        {
          question: "Microservices with Spring Cloud",
          descriptions: [
            {
              description: "Spring Cloud Config Server",
              answers: [
                "Centralized configuration management",
                "Setting up and using Config Server",
              ],
            },
          ],
        },
        {
          question: "API Gateway with Spring Cloud Gateway",
          descriptions: [
            {
              description: "Routing requests",
              answers: [],
            },
            {
              description: "Implementing cross-cutting concerns",
              answers: ["Security and logging"],
            },
          ],
        },
        {
          question: "Spring Security, JWT, and Role-Based Authentication",
          descriptions: [
            {
              description: "Spring Security Basics",
              answers: ["Configuring authentication and authorization"],
            },
            {
              description: "JWT Authentication",
              answers: ["Generating and validating tokens"],
            },
            {
              description: "Role-Based Access Control",
              answers: ["Defining and managing user roles and permissions"],
            },
          ],
        },
        {
          question: "Cloud Deployment and Management",
          descriptions: [
            {
              description: "AWS EC2",
              answers: [
                "Setting up and managing virtual servers",
                "Deploying microservices on EC2 instances",
              ],
            },
          ],
        },
      ],
    },
    {
      module: "Module 16: Testing in Java and Spring",
      questions: [
        {
          question: "Unit Testing with JUnit",
          descriptions: [
            {
              description: "Writing Test Cases",
              answers: ["Annotations, assertions"],
            },
            {
              description: "Mocking with Mockito",
              answers: ["Creating mock objects, stubbing methods"],
            },
          ],
        },
        {
          question: "Integration Testing with Spring Boot Test",
          descriptions: [
            {
              description: "Testing Spring Components",
              answers: ["Context loading, dependency injection in tests"],
            },
          ],
        },
        {
          question: "Testing REST APIs",
          descriptions: [
            {
              description: "Using MockMvc",
              answers: ["Testing REST endpoints with MockMvc"],
            },
          ],
        },
      ],
    },
    {
      module:
        "Module 17: DevOps and Continuous Integration/Continuous Deployment (CI/CD)",
      questions: [
        {
          question: "Introduction to DevOps",
          descriptions: [
            {
              description: "DevOps Principles",
              answers: ["Collaboration, automation, continuous improvement"],
            },
          ],
        },
        {
          question: "Continuous Integration Tools",
          descriptions: [
            {
              description: "Jenkins, GitLab CI/CD",
              answers: [
                "Setting up pipelines",
                "Automating builds and tests",
                "Automated build, test, and deployment workflows",
              ],
            },
          ],
        },
      ],
    },
    {
      module: "Module 18: Real Time Project Work & Deployment in Cloud",
      questions: [
        {
          question: "Real Time Project Work",
          descriptions: [
            {
              description: "Understanding Real-Time Projects",
              answers: [
                "Project planning and management",
                "Hands-on project development",
                "Designing, coding, testing, and deployment",
              ],
            },
          ],
        },
        {
          question: "Deployment in Cloud",
          descriptions: [
            {
              description: "Choosing the right cloud platform",
              answers: ["Evaluating AWS, Azure, Google Cloud"],
            },
            {
              description: "Setting up cloud environments",
              answers: [
                "Configuring virtual machines, storage, and networking",
              ],
            },
            {
              description: "Continuous deployment in the cloud",
              answers: ["Setting up CI/CD pipelines for cloud deployments"],
            },
          ],
        },
      ],
    },

    // You can follow the same pattern for Module 2, 3, etc.
  ];

  return (
    <div>
      {/* Banner Section */}
      <div className="flex justify-center items-center px-20 py-25 gap-4">
        <div className="w-1/2">
          <BannerLeft
            title="Java Fullstack Development"
            subtitle="Learn Java, Spring Boot, HTML, CSS, JavaScript, React, MySQL, and version control (Git) — everything you need to build modern, scalable web applications."
            counter={[32526, 10203, 1001]}
          />
        </div>
        <div className="w-1/2">
          <BannerVideo videoId="m_J0n0lyWL0" imageUrl={img} />
        </div>
      </div>
      {/* Road Map Section */}
      <div className="bg-white py-4 text-center">
        <h1 className="px-4  text-black text-3xl lg:text-5xl text-center fold-primary font-black">
          From Zero to{" "}
          <span className="text-red-600">Full Stack Hero with 120 Days</span>
        </h1>
        <p className="font-primary font-medium text-xl text-gray-800 mt-4 ">
          Java Fullstack Development (HARD)
        </p>
      </div>
      <div className="relative">
        <div className="relative overflow-hidden px-20 py-10">
          <div className="absolute -top-5 main-wave">
            <svg
              className="wave"
              width="100%"
              height="100%"
              viewBox="0 0 900 450"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <defs>
                <linearGradient
                  id="roadmapGradient"
                  x1="0"
                  y1="0"
                  x2="900"
                  y2="0"
                  gradientUnits="userSpaceOnUse"
                >
                  <stop offset="0%" stopColor="#0b090a" />
                  <stop offset="100%" stopColor="#ba181b" />
                </linearGradient>
              </defs>

              <path
                d="
              M50 80
              L850 80
              L850 230
              L50 230
              L50 380
              L850 380
            "
                stroke="url(#roadmapGradient)"
                strokeWidth="6"
                strokeDasharray="5 5"
                fill="none"
              />
            </svg>
          </div>
          <div className="absolute top-8.5 left-23 border-b-4 border-b-[#0b090a]">
            <svg
              width="64px"
              height="64px"
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
              <g
                id="SVGRepo_tracerCarrier"
                strokeLinecap="round"
                strokeLinejoin="round"
              ></g>
              <g id="SVGRepo_iconCarrier">
                {" "}
                <path
                  d="M14 22V16.9612C14 16.3537 13.7238 15.7791 13.2494 15.3995L11.5 14M11.5 14L13 7.5M11.5 14L10 13M13 7.5L11 7M13 7.5L15.0426 10.7681C15.3345 11.2352 15.8062 11.5612 16.3463 11.6693L18 12M10 13L11 7M10 13L9.40011 16.2994C9.18673 17.473 8.00015 18.2 6.85767 17.8573L4 17M11 7L8.10557 8.44721C7.428 8.786 7 9.47852 7 10.2361V12M14.5 3.5C14.5 4.05228 14.0523 4.5 13.5 4.5C12.9477 4.5 12.5 4.05228 12.5 3.5C12.5 2.94772 12.9477 2.5 13.5 2.5C14.0523 2.5 14.5 2.94772 14.5 3.5Z"
                  stroke="#000000"
                  strokeWidth="2"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                ></path>{" "}
              </g>
            </svg>
          </div>
          <div className="absolute bottom-48 right-22.5">
            <svg
              height="64px"
              width="64px"
              version="1.1"
              id="_x32_"
              xmlns="http://www.w3.org/2000/svg"
              xmlnsXlink="http://www.w3.org/1999/xlink"
              viewBox="0 0 512 512"
              xmlSpace="preserve"
              fill="#ba181b"
              transform="matrix(-1, 0, 0, 1, 0, 0)"
            >
              <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
              <g
                id="SVGRepo_tracerCarrier"
                strokeLinecap="round"
                strokeLinejoin="round"
              ></g>
              <g id="SVGRepo_iconCarrier">
                {" "}
                <style type="text/css"> {`.st0{fill:#000000;}`} </style>{" "}
                <g>
                  {" "}
                  <path
                    className="st0"
                    d="M275.175,74.728c20.637,0,37.372-16.728,37.372-37.364C312.547,16.727,295.812,0,275.175,0 c-20.629,0-37.357,16.727-37.357,37.364C237.818,58,254.546,74.728,275.175,74.728z"
                  ></path>{" "}
                  <polygon
                    className="st0"
                    points="372.199,419.995 282.451,419.995 282.451,354.645 192.737,354.645 192.737,289.282 102.993,289.282 102.993,223.918 26.559,223.918 26.559,250.56 76.359,250.56 76.359,315.923 166.103,315.923 166.103,381.287 255.817,381.287 255.817,446.637 345.568,446.637 345.568,512 460.237,512 460.237,485.366 372.199,485.359 "
                  ></polygon>{" "}
                  <path
                    className="st0"
                    d="M477.983,181.243c-0.636-4.242-4.588-7.168-8.838-6.532l-17.934,2.695l-1.532-10.195 c-0.636-4.147-4.494-6.987-8.635-6.373l-1.878,0.282c-0.261-1.734-0.86-3.447-1.85-5.022l-25.897-41.411 c-2.796-4.466-7.052-7.819-12.053-9.488L352.48,83.334c-15.857-7.392-34.21-6.597-49.42,1.821l-9.748,59.294l-36.128-30.63 l-28.882,18.187l-42.183-19.799c-6.554-3.671-14.82-1.495-18.714,4.92l-0.535,0.867c-1.922,3.187-2.514,6.994-1.618,10.601 c0.888,3.606,3.194,6.705,6.387,8.612l50.277,30.002c6.25,3.736,13.874,4.408,20.687,1.836l29.777-16.041l14.119,56.952 l-46.932-0.238c-7.905-0.022-15.412,3.483-20.456,9.574c-5.044,6.091-7.088,14.119-5.586,21.887l15.788,81.282 c1.748,9.003,10.282,15.03,19.35,13.672l0.679-0.102c8.982-1.344,15.347-9.458,14.516-18.498l-5.347-58.24l70.819,1.648 c10.167,0.231,19.889-4.156,26.443-11.937c6.554-7.775,9.22-18.108,7.262-28.094l-1.814-9.205l-14.564-82.2l37.534,5.542 l27.458,31.844c-1.618,1.648-2.565,3.902-2.204,6.359l1.532,10.21l-17.927,2.695c-4.249,0.636-7.168,4.595-6.525,8.844l7.363,48.99 c0.644,4.241,4.596,7.168,8.838,6.532l76.101-11.446c4.242-0.636,7.161-4.596,6.525-8.844L477.983,181.243z M295.162,168.496 c0-2.558,2.074-4.625,4.624-4.625s4.624,2.067,4.624,4.625c0,2.558-2.074,4.624-4.624,4.624S295.162,171.054,295.162,168.496z M304.714,199.018c-2.551,0-4.625-2.066-4.625-4.624s2.074-4.624,4.625-4.624c2.55,0,4.624,2.066,4.624,4.624 S307.265,199.018,304.714,199.018z M416.745,172.644c4.329,4.205,10.984,5,16.157,1.719l0.304-0.195 c2.182-1.38,3.801-3.316,4.827-5.484l4.104-0.621l0.318,0.232l1.532,10.202l-25.781,3.873L416.745,172.644z"
                  ></path>{" "}
                  <path
                    className="st0"
                    d="M393.667,384.835c6.286,6.568,16.67,6.965,23.44,0.888l0.485-0.426c6.749-6.055,7.486-16.381,1.676-23.353 l-38.701-51.932l-12.342-60.126c-0.838,1.207-1.698,2.4-2.652,3.534c-9.205,10.932-22.692,17.204-36.992,17.204l-6.576-0.152 l14.43,46.909c3.338,6.908,7.681,13.296,12.873,18.968L393.667,384.835z"
                  ></path>{" "}
                  <polygon
                    className="st0"
                    points="273.983,118.899 285.913,125.026 290.848,111.818 284.41,98.075 268.766,107.757 "
                  ></polygon>{" "}
                </g>{" "}
              </g>
            </svg>
          </div>
          <div className="grid grid-cols-4 space-y-25 px-35">
            {roadmapData.map((item, index) => (
              <RoadmapItem
                key={index}
                title={item.title}
                duration={item.duration}
                icon={item.icon}
              />
            ))}
          </div>
        </div>
        <p className="absolute bottom-32 right-35 font-primary font-bold text-xl pt-4 text-center lg:text-end">
          Total: <span className="text-red-600">120</span> Days to{" "}
          <span className="text-red-600">150</span> Days
        </p>
      </div>
      <div className="bg-gray-100 py-6 text-center">
        <h1 className="bg-gradient-to-r from-[#0b090a] to-[#ba181b] bg-clip-text text-transparent text-3xl lg:text-5xl text-center fold-primary font-black">
          Our Java Full Stack Development Syllabus
        </h1>
        <p className="font-primary font-medium text-xl text-gray-800 mt-4">
          (HARD)
        </p>
      </div>
      <div
        className="flex items-center justify-end px-20 bg-gray-100"
        data-aos="fade-up"
      >
        <DownloadSyllabus />
      </div>
      <Faq items={moduleData} />
    </div>
  );
};

export default Courses;
